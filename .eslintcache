[{"D:\\My Workspace\\itss_std_react_todo_k62\\src\\index.js":"1","D:\\My Workspace\\itss_std_react_todo_k62\\src\\reportWebVitals.js":"2","D:\\My Workspace\\itss_std_react_todo_k62\\src\\App.js":"3","D:\\My Workspace\\itss_std_react_todo_k62\\src\\components\\Todo.js":"4","D:\\My Workspace\\itss_std_react_todo_k62\\src\\components\\Input.js":"5","D:\\My Workspace\\itss_std_react_todo_k62\\src\\components\\Filter.js":"6","D:\\My Workspace\\itss_std_react_todo_k62\\src\\components\\TodoItem.js":"7","D:\\My Workspace\\itss_std_react_todo_k62\\src\\hooks\\storage.js":"8","D:\\My Workspace\\itss_std_react_todo_k62\\src\\lib\\util.js":"9","D:\\My Workspace\\itss_std_react_todo_k62\\src\\hooks\\firebaseStorage.js":"10","D:\\My Workspace\\itss_std_react_todo_k62\\src\\lib\\firebase.js":"11","D:\\My Workspace\\itss_std_react_todo_k62\\src\\components\\Login.js":"12"},{"size":517,"mtime":1621563208752,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1621563208753,"results":"15","hashOfConfig":"14"},{"size":1411,"mtime":1621571413922,"results":"16","hashOfConfig":"14"},{"size":2199,"mtime":1621566238683,"results":"17","hashOfConfig":"14"},{"size":830,"mtime":1621563208751,"results":"18","hashOfConfig":"14"},{"size":1053,"mtime":1621563208750,"results":"19","hashOfConfig":"14"},{"size":748,"mtime":1621563208751,"results":"20","hashOfConfig":"14"},{"size":1102,"mtime":1617762332840,"results":"21","hashOfConfig":"22"},{"size":68,"mtime":1621563208753,"results":"23","hashOfConfig":"14"},{"size":1257,"mtime":1621566238683,"results":"24","hashOfConfig":"14"},{"size":2239,"mtime":1621571080531,"results":"25","hashOfConfig":"14"},{"size":371,"mtime":1621571122681,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1rhd1wj",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"40fmo7",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"29"},"D:\\My Workspace\\itss_std_react_todo_k62\\src\\index.js",[],["58","59"],"D:\\My Workspace\\itss_std_react_todo_k62\\src\\reportWebVitals.js",[],"D:\\My Workspace\\itss_std_react_todo_k62\\src\\App.js",[],"D:\\My Workspace\\itss_std_react_todo_k62\\src\\components\\Todo.js",["60","61"],"import React, { useState } from 'react';\r\n\r\n/* \r\n  【Todoのデータ構成】\r\n ・key：Todoを特定するID（String）\r\n ・text：Todoの内容（String）\r\n ・done：完了状態（Boolean true:完了済み,, false:未完了）\r\n*/\r\n\r\n/* コンポーネント */\r\nimport TodoItem from './TodoItem';\r\nimport Input from './Input';\r\nimport Filter from './Filter';\r\n\r\n/* カスタムフック */\r\nimport useFirebaseStorage from '../hooks/firebaseStorage';\r\n\r\n/* ライブラリ */\r\nimport { getKey } from \"../lib/util\";\r\n\r\nfunction Todo() {\r\n  // const [items, putItems] = React.useState([\r\n  //   /* テストコード 開始 */\r\n  //   { key: getKey(), text: '日本語の宿題', done: false },\r\n  //   { key: getKey(), text: 'reactを勉強する', done: false },\r\n  //   { key: getKey(), text: '明日の準備をする', done: false },\r\n  //   /* テストコード 終了 */\r\n  // ]);\r\n\r\n  const [filter, setFilter] = useState('ALL');\r\n  const [items, addItem, updateItem, clearItems] = useFirebaseStorage();\r\n\r\n  const handleCheck = (changedItem, isCheck) => {\r\n    updateItem(changedItem, isCheck);\r\n  };\r\n\r\n  // Day la cho dinh nghia cau truc cho mot item trong items (~trong state)\r\n  const handleAdd = (text) => {\r\n    addItem({ text, done: false });\r\n  }\r\n\r\n  const handleFilterChange = (value) => { setFilter(value) };\r\n\r\n  const displayItems = items.filter(item => {\r\n    if (filter === 'ALL') return true;\r\n    if (filter === 'TODO' && !item.done) return true;\r\n    if (filter === 'DONE' && item.done) return true;\r\n  });\r\n\r\n  return (\r\n    <div className=\"panel\">\r\n      <div className=\"panel-heading\">\r\n        ITSS ToDoアプリ\r\n      </div>\r\n      <Input addTodo={handleAdd} />\r\n      <Filter value={filter} onChange={handleFilterChange} />\r\n      {displayItems.map(item => (\r\n        <TodoItem key={item.id} item={item} onCheck={handleCheck} />\r\n      ))}\r\n      <div className=\"panel-block\">\r\n        {displayItems.length} items\r\n      </div>\r\n      <div className=\"panel-block\">\r\n        <button className=\"button is-light is-fullwidth\" onClick={clearItems}>\r\n          全てのToDoを削除\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;","D:\\My Workspace\\itss_std_react_todo_k62\\src\\components\\Input.js",["62"],"import React, { useState } from 'react';\r\n/* \r\n  【inputコンポーネント】\r\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\r\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\r\n*/\r\nfunction Input( {addTodo} ) {\r\n  const [text, setText] = React.useState('');\r\n\r\n  const handleChange = (event)=> {\r\n    setText(event.target.value);\r\n  }\r\n  const handleKeyDown = (event) => {\r\n    if (event.keyCode === 13) {\r\n      addTodo(text);\r\n      setText('');\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"panel-block\">\r\n      <input className=\"input\" type=\"text\" placeholder=\"Todoを入力してください\" value={text}\r\n      onChange={handleChange}\r\n      onKeyDown={handleKeyDown}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","D:\\My Workspace\\itss_std_react_todo_k62\\src\\components\\Filter.js",["63","64","65"],"/* \r\n  【Filterコンポーネント】\r\n ・該当するTodoをステータス毎にで分けてリスト表示する\r\n ・タブで表示する\r\n ・サポートするステータスは「すべて」「未完了」「完了済み」\r\n*/\r\nfunction Filter({ value, onChange }) {\r\n  const handleClick = (value) => {\r\n    onChange(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel-tabs\">\r\n      <a\r\n        href=\"#\"\r\n        // onClick={handleClick.bind(null, 'ALL')}\r\n        onClick={()=> {handleClick('ALL')}}\r\n        className={value === 'ALL' ? 'is-active' : ''}\r\n      >全て</a>\r\n      <a\r\n        href=\"#\"\r\n        // onClick={handleClick.bind(null, 'TODO')}\r\n        onClick={()=> {handleClick('TODO')}}\r\n        className={value === 'TODO' ? 'is-active' : ''}\r\n      >未完了</a>\r\n      <a\r\n        href=\"#\"\r\n        // onClick={handleClick.bind(null, 'DONE')}\r\n        onClick={()=> {handleClick('DONE')}}\r\n        className={value === 'DONE' ? 'is-active' : ''}\r\n      >完了済み</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter","D:\\My Workspace\\itss_std_react_todo_k62\\src\\components\\TodoItem.js",[],"D:\\My Workspace\\itss_std_react_todo_k62\\src\\hooks\\storage.js",[],["66","67"],"D:\\My Workspace\\itss_std_react_todo_k62\\src\\lib\\util.js",[],"D:\\My Workspace\\itss_std_react_todo_k62\\src\\hooks\\firebaseStorage.js",["68"],"import { useState, useEffect } from 'react';\r\n\r\n/* ライブラリ */\r\nimport { addFirebaseItem, updateFirebaseItem, getFirebaseItems, clearFirebaseItem } from \"../lib/firebase\";\r\n\r\nexport default function useFirebaseStorage() {\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getItems();\r\n    }, [items]);\r\n\r\n    const getItems = async () => {\r\n        const _items = await getFirebaseItems();\r\n        setItems(_items);\r\n    };\r\n\r\n    const addItem = async item => {\r\n        const newItem = { text: item.text, done: item.done };\r\n        await addFirebaseItem(newItem);\r\n        setItems([...items, newItem]);\r\n    };\r\n\r\n    const updateItem = async (changedItem, isCheck) => {\r\n        const newItem = { ...changedItem, done: isCheck };\r\n        await updateFirebaseItem(newItem, changedItem.id);\r\n        const newItems = items.map((item) => {\r\n            if (item.id === changedItem.id) {\r\n                item.done = isCheck;\r\n            }\r\n            return item;\r\n        })\r\n        setItems(newItems);\r\n    }\r\n\r\n    const clearItems = () => {\r\n        items.map(item => {\r\n            clearFirebaseItem(item);\r\n        })\r\n        setItems([]);\r\n    };\r\n\r\n    return [items, addItem, updateItem, clearItems];\r\n};","D:\\My Workspace\\itss_std_react_todo_k62\\src\\lib\\firebase.js",[],"D:\\My Workspace\\itss_std_react_todo_k62\\src\\components\\Login.js",["69"],"import React from 'react';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\n\r\nimport { firebase, auth, uiConfig } from \"../lib/firebase\";\r\n\r\nfunction Login() {\r\n    return (\r\n        <div className=\"column panel-block\">\r\n            <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":19,"column":10,"nodeType":"76","messageId":"77","endLine":19,"endColumn":16},{"ruleId":"78","severity":1,"message":"79","line":44,"column":42,"nodeType":"80","messageId":"81","endLine":44,"endColumn":44},{"ruleId":"74","severity":1,"message":"82","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":14,"column":7,"nodeType":"85","endLine":19,"endColumn":8},{"ruleId":"83","severity":1,"message":"84","line":20,"column":7,"nodeType":"85","endLine":25,"endColumn":8},{"ruleId":"83","severity":1,"message":"84","line":26,"column":7,"nodeType":"85","endLine":31,"endColumn":8},{"ruleId":"70","replacedBy":"86"},{"ruleId":"72","replacedBy":"87"},{"ruleId":"78","severity":1,"message":"88","line":37,"column":24,"nodeType":"80","messageId":"89","endLine":37,"endColumn":26},{"ruleId":"74","severity":1,"message":"90","line":4,"column":10,"nodeType":"76","messageId":"77","endLine":4,"endColumn":18},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'getKey' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["91"],["92"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","'firebase' is defined but never used.","no-global-assign","no-unsafe-negation"]